// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.1.0 Build 162 10/23/2013 SJ Full Version"

// DATE "05/25/2023 16:13:14"

// 
// Device: Altera EP3C5F256C6 Package FBGA256
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module COUNT4_3 (
	clk,
	RST,
	DOUT,
	COUT);
input 	clk;
input 	RST;
output 	[3:0] DOUT;
output 	COUT;

// Design Ports Information
// DOUT[0]	=>  Location: PIN_R4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// DOUT[1]	=>  Location: PIN_N6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// DOUT[2]	=>  Location: PIN_T4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// DOUT[3]	=>  Location: PIN_N5,	 I/O Standard: 2.5 V,	 Current Strength: Default
// COUT	=>  Location: PIN_M6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// clk	=>  Location: PIN_E2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// RST	=>  Location: PIN_E1,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \DOUT[0]~output_o ;
wire \DOUT[1]~output_o ;
wire \DOUT[2]~output_o ;
wire \DOUT[3]~output_o ;
wire \COUT~output_o ;
wire \clk~input_o ;
wire \clk~inputclkctrl_outclk ;
wire \Q1~2_combout ;
wire \RST~input_o ;
wire \RST~inputclkctrl_outclk ;
wire \Q1~3_combout ;
wire \Q1~1_combout ;
wire \Q1~0_combout ;
wire \LessThan0~0_combout ;
wire \COUT~reg0_q ;
wire [3:0] Q1;


// Location: IOOBUF_X5_Y0_N23
cycloneiii_io_obuf \DOUT[0]~output (
	.i(Q1[0]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\DOUT[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \DOUT[0]~output .bus_hold = "false";
defparam \DOUT[0]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X7_Y0_N16
cycloneiii_io_obuf \DOUT[1]~output (
	.i(Q1[1]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\DOUT[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \DOUT[1]~output .bus_hold = "false";
defparam \DOUT[1]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X5_Y0_N16
cycloneiii_io_obuf \DOUT[2]~output (
	.i(Q1[2]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\DOUT[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \DOUT[2]~output .bus_hold = "false";
defparam \DOUT[2]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X7_Y0_N23
cycloneiii_io_obuf \DOUT[3]~output (
	.i(Q1[3]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\DOUT[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \DOUT[3]~output .bus_hold = "false";
defparam \DOUT[3]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X7_Y0_N9
cycloneiii_io_obuf \COUT~output (
	.i(\COUT~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\COUT~output_o ),
	.obar());
// synopsys translate_off
defparam \COUT~output .bus_hold = "false";
defparam \COUT~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y11_N1
cycloneiii_io_ibuf \clk~input (
	.i(clk),
	.ibar(gnd),
	.o(\clk~input_o ));
// synopsys translate_off
defparam \clk~input .bus_hold = "false";
defparam \clk~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G4
cycloneiii_clkctrl \clk~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\clk~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\clk~inputclkctrl_outclk ));
// synopsys translate_off
defparam \clk~inputclkctrl .clock_type = "global clock";
defparam \clk~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: LCCOMB_X6_Y1_N16
cycloneiii_lcell_comb \Q1~2 (
// Equation(s):
// \Q1~2_combout  = (Q1[0] & ((Q1[2] $ (Q1[1])))) # (!Q1[0] & (Q1[2] & ((!Q1[1]) # (!Q1[3]))))

	.dataa(Q1[0]),
	.datab(Q1[3]),
	.datac(Q1[2]),
	.datad(Q1[1]),
	.cin(gnd),
	.combout(\Q1~2_combout ),
	.cout());
// synopsys translate_off
defparam \Q1~2 .lut_mask = 16'h1AF0;
defparam \Q1~2 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOIBUF_X0_Y11_N8
cycloneiii_io_ibuf \RST~input (
	.i(RST),
	.ibar(gnd),
	.o(\RST~input_o ));
// synopsys translate_off
defparam \RST~input .bus_hold = "false";
defparam \RST~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G2
cycloneiii_clkctrl \RST~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\RST~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\RST~inputclkctrl_outclk ));
// synopsys translate_off
defparam \RST~inputclkctrl .clock_type = "global clock";
defparam \RST~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: FF_X6_Y1_N17
dffeas \Q1[2] (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\Q1~2_combout ),
	.asdata(vcc),
	.clrn(\RST~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(Q1[2]),
	.prn(vcc));
// synopsys translate_off
defparam \Q1[2] .is_wysiwyg = "true";
defparam \Q1[2] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X6_Y1_N22
cycloneiii_lcell_comb \Q1~3 (
// Equation(s):
// \Q1~3_combout  = (Q1[1] & ((Q1[2] & (!Q1[3] & Q1[0])) # (!Q1[2] & (Q1[3])))) # (!Q1[1] & (((Q1[3]))))

	.dataa(Q1[1]),
	.datab(Q1[2]),
	.datac(Q1[3]),
	.datad(Q1[0]),
	.cin(gnd),
	.combout(\Q1~3_combout ),
	.cout());
// synopsys translate_off
defparam \Q1~3 .lut_mask = 16'h7870;
defparam \Q1~3 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X6_Y1_N23
dffeas \Q1[3] (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\Q1~3_combout ),
	.asdata(vcc),
	.clrn(\RST~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(Q1[3]),
	.prn(vcc));
// synopsys translate_off
defparam \Q1[3] .is_wysiwyg = "true";
defparam \Q1[3] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X6_Y1_N6
cycloneiii_lcell_comb \Q1~1 (
// Equation(s):
// \Q1~1_combout  = (Q1[1] & (!Q1[0] & ((!Q1[2]) # (!Q1[3])))) # (!Q1[1] & (((Q1[0]))))

	.dataa(Q1[3]),
	.datab(Q1[2]),
	.datac(Q1[1]),
	.datad(Q1[0]),
	.cin(gnd),
	.combout(\Q1~1_combout ),
	.cout());
// synopsys translate_off
defparam \Q1~1 .lut_mask = 16'h0F70;
defparam \Q1~1 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X6_Y1_N7
dffeas \Q1[1] (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\Q1~1_combout ),
	.asdata(vcc),
	.clrn(\RST~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(Q1[1]),
	.prn(vcc));
// synopsys translate_off
defparam \Q1[1] .is_wysiwyg = "true";
defparam \Q1[1] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X6_Y1_N12
cycloneiii_lcell_comb \Q1~0 (
// Equation(s):
// \Q1~0_combout  = (!Q1[0] & (((!Q1[3]) # (!Q1[2])) # (!Q1[1])))

	.dataa(Q1[1]),
	.datab(Q1[2]),
	.datac(Q1[0]),
	.datad(Q1[3]),
	.cin(gnd),
	.combout(\Q1~0_combout ),
	.cout());
// synopsys translate_off
defparam \Q1~0 .lut_mask = 16'h070F;
defparam \Q1~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X6_Y1_N13
dffeas \Q1[0] (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\Q1~0_combout ),
	.asdata(vcc),
	.clrn(\RST~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(Q1[0]),
	.prn(vcc));
// synopsys translate_off
defparam \Q1[0] .is_wysiwyg = "true";
defparam \Q1[0] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X6_Y1_N24
cycloneiii_lcell_comb \LessThan0~0 (
// Equation(s):
// \LessThan0~0_combout  = (Q1[1] & (Q1[3] & Q1[2]))

	.dataa(Q1[1]),
	.datab(gnd),
	.datac(Q1[3]),
	.datad(Q1[2]),
	.cin(gnd),
	.combout(\LessThan0~0_combout ),
	.cout());
// synopsys translate_off
defparam \LessThan0~0 .lut_mask = 16'hA000;
defparam \LessThan0~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X6_Y1_N25
dffeas \COUT~reg0 (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\LessThan0~0_combout ),
	.asdata(vcc),
	.clrn(\RST~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\COUT~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \COUT~reg0 .is_wysiwyg = "true";
defparam \COUT~reg0 .power_up = "low";
// synopsys translate_on

assign DOUT[0] = \DOUT[0]~output_o ;

assign DOUT[1] = \DOUT[1]~output_o ;

assign DOUT[2] = \DOUT[2]~output_o ;

assign DOUT[3] = \DOUT[3]~output_o ;

assign COUT = \COUT~output_o ;

endmodule
