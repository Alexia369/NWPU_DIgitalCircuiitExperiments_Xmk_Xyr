// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.1.0 Build 162 10/23/2013 SJ Full Version"

// DATE "05/26/2023 20:26:22"

// 
// Device: Altera EP3C16F484C6 Package FBGA484
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module test2 (
	bin,
	seg);
input 	[3:0] bin;
output 	[6:0] seg;

// Design Ports Information
// seg[0]	=>  Location: PIN_E11,	 I/O Standard: 2.5 V,	 Current Strength: Default
// seg[1]	=>  Location: PIN_F11,	 I/O Standard: 2.5 V,	 Current Strength: Default
// seg[2]	=>  Location: PIN_H12,	 I/O Standard: 2.5 V,	 Current Strength: Default
// seg[3]	=>  Location: PIN_H13,	 I/O Standard: 2.5 V,	 Current Strength: Default
// seg[4]	=>  Location: PIN_G12,	 I/O Standard: 2.5 V,	 Current Strength: Default
// seg[5]	=>  Location: PIN_F12,	 I/O Standard: 2.5 V,	 Current Strength: Default
// seg[6]	=>  Location: PIN_F13,	 I/O Standard: 2.5 V,	 Current Strength: Default
// bin[0]	=>  Location: PIN_G4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// bin[1]	=>  Location: PIN_H6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// bin[2]	=>  Location: PIN_H5,	 I/O Standard: 2.5 V,	 Current Strength: Default
// bin[3]	=>  Location: PIN_J6,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \seg[0]~output_o ;
wire \seg[1]~output_o ;
wire \seg[2]~output_o ;
wire \seg[3]~output_o ;
wire \seg[4]~output_o ;
wire \seg[5]~output_o ;
wire \seg[6]~output_o ;
wire \bin[1]~input_o ;
wire \bin[0]~input_o ;
wire \bin[2]~input_o ;
wire \bin[3]~input_o ;
wire \Mux6~0_combout ;
wire \Mux5~0_combout ;
wire \Mux4~0_combout ;
wire \Mux3~0_combout ;
wire \Mux2~0_combout ;
wire \Mux1~0_combout ;
wire \Mux0~0_combout ;


// Location: IOOBUF_X21_Y29_N23
cycloneiii_io_obuf \seg[0]~output (
	.i(\Mux6~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\seg[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \seg[0]~output .bus_hold = "false";
defparam \seg[0]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X21_Y29_N30
cycloneiii_io_obuf \seg[1]~output (
	.i(\Mux5~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\seg[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \seg[1]~output .bus_hold = "false";
defparam \seg[1]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X26_Y29_N2
cycloneiii_io_obuf \seg[2]~output (
	.i(\Mux4~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\seg[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \seg[2]~output .bus_hold = "false";
defparam \seg[2]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X28_Y29_N30
cycloneiii_io_obuf \seg[3]~output (
	.i(\Mux3~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\seg[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \seg[3]~output .bus_hold = "false";
defparam \seg[3]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X26_Y29_N9
cycloneiii_io_obuf \seg[4]~output (
	.i(\Mux2~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\seg[4]~output_o ),
	.obar());
// synopsys translate_off
defparam \seg[4]~output .bus_hold = "false";
defparam \seg[4]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X28_Y29_N23
cycloneiii_io_obuf \seg[5]~output (
	.i(\Mux1~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\seg[5]~output_o ),
	.obar());
// synopsys translate_off
defparam \seg[5]~output .bus_hold = "false";
defparam \seg[5]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X26_Y29_N16
cycloneiii_io_obuf \seg[6]~output (
	.i(!\Mux0~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\seg[6]~output_o ),
	.obar());
// synopsys translate_off
defparam \seg[6]~output .bus_hold = "false";
defparam \seg[6]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y25_N22
cycloneiii_io_ibuf \bin[1]~input (
	.i(bin[1]),
	.ibar(gnd),
	.o(\bin[1]~input_o ));
// synopsys translate_off
defparam \bin[1]~input .bus_hold = "false";
defparam \bin[1]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y23_N8
cycloneiii_io_ibuf \bin[0]~input (
	.i(bin[0]),
	.ibar(gnd),
	.o(\bin[0]~input_o ));
// synopsys translate_off
defparam \bin[0]~input .bus_hold = "false";
defparam \bin[0]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y27_N1
cycloneiii_io_ibuf \bin[2]~input (
	.i(bin[2]),
	.ibar(gnd),
	.o(\bin[2]~input_o ));
// synopsys translate_off
defparam \bin[2]~input .bus_hold = "false";
defparam \bin[2]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y24_N1
cycloneiii_io_ibuf \bin[3]~input (
	.i(bin[3]),
	.ibar(gnd),
	.o(\bin[3]~input_o ));
// synopsys translate_off
defparam \bin[3]~input .bus_hold = "false";
defparam \bin[3]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X21_Y28_N0
cycloneiii_lcell_comb \Mux6~0 (
// Equation(s):
// \Mux6~0_combout  = (\bin[2]~input_o  & (!\bin[1]~input_o  & (\bin[0]~input_o  $ (!\bin[3]~input_o )))) # (!\bin[2]~input_o  & (\bin[0]~input_o  & (\bin[1]~input_o  $ (!\bin[3]~input_o ))))

	.dataa(\bin[1]~input_o ),
	.datab(\bin[0]~input_o ),
	.datac(\bin[2]~input_o ),
	.datad(\bin[3]~input_o ),
	.cin(gnd),
	.combout(\Mux6~0_combout ),
	.cout());
// synopsys translate_off
defparam \Mux6~0 .lut_mask = 16'h4814;
defparam \Mux6~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X21_Y28_N2
cycloneiii_lcell_comb \Mux5~0 (
// Equation(s):
// \Mux5~0_combout  = (\bin[1]~input_o  & ((\bin[0]~input_o  & ((\bin[3]~input_o ))) # (!\bin[0]~input_o  & (\bin[2]~input_o )))) # (!\bin[1]~input_o  & (\bin[2]~input_o  & (\bin[0]~input_o  $ (\bin[3]~input_o ))))

	.dataa(\bin[1]~input_o ),
	.datab(\bin[0]~input_o ),
	.datac(\bin[2]~input_o ),
	.datad(\bin[3]~input_o ),
	.cin(gnd),
	.combout(\Mux5~0_combout ),
	.cout());
// synopsys translate_off
defparam \Mux5~0 .lut_mask = 16'hB860;
defparam \Mux5~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X21_Y28_N12
cycloneiii_lcell_comb \Mux4~0 (
// Equation(s):
// \Mux4~0_combout  = (\bin[2]~input_o  & (\bin[3]~input_o  & ((\bin[1]~input_o ) # (!\bin[0]~input_o )))) # (!\bin[2]~input_o  & (\bin[1]~input_o  & (!\bin[0]~input_o  & !\bin[3]~input_o )))

	.dataa(\bin[1]~input_o ),
	.datab(\bin[0]~input_o ),
	.datac(\bin[2]~input_o ),
	.datad(\bin[3]~input_o ),
	.cin(gnd),
	.combout(\Mux4~0_combout ),
	.cout());
// synopsys translate_off
defparam \Mux4~0 .lut_mask = 16'hB002;
defparam \Mux4~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X21_Y28_N14
cycloneiii_lcell_comb \Mux3~0 (
// Equation(s):
// \Mux3~0_combout  = (\bin[0]~input_o  & (\bin[1]~input_o  $ ((!\bin[2]~input_o )))) # (!\bin[0]~input_o  & ((\bin[1]~input_o  & (!\bin[2]~input_o  & \bin[3]~input_o )) # (!\bin[1]~input_o  & (\bin[2]~input_o  & !\bin[3]~input_o ))))

	.dataa(\bin[1]~input_o ),
	.datab(\bin[0]~input_o ),
	.datac(\bin[2]~input_o ),
	.datad(\bin[3]~input_o ),
	.cin(gnd),
	.combout(\Mux3~0_combout ),
	.cout());
// synopsys translate_off
defparam \Mux3~0 .lut_mask = 16'h8694;
defparam \Mux3~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X21_Y28_N16
cycloneiii_lcell_comb \Mux2~0 (
// Equation(s):
// \Mux2~0_combout  = (\bin[1]~input_o  & (\bin[0]~input_o  & ((!\bin[3]~input_o )))) # (!\bin[1]~input_o  & ((\bin[2]~input_o  & ((!\bin[3]~input_o ))) # (!\bin[2]~input_o  & (\bin[0]~input_o ))))

	.dataa(\bin[1]~input_o ),
	.datab(\bin[0]~input_o ),
	.datac(\bin[2]~input_o ),
	.datad(\bin[3]~input_o ),
	.cin(gnd),
	.combout(\Mux2~0_combout ),
	.cout());
// synopsys translate_off
defparam \Mux2~0 .lut_mask = 16'h04DC;
defparam \Mux2~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X21_Y28_N26
cycloneiii_lcell_comb \Mux1~0 (
// Equation(s):
// \Mux1~0_combout  = (\bin[1]~input_o  & (!\bin[3]~input_o  & ((\bin[0]~input_o ) # (!\bin[2]~input_o )))) # (!\bin[1]~input_o  & (\bin[0]~input_o  & (\bin[2]~input_o  $ (!\bin[3]~input_o ))))

	.dataa(\bin[1]~input_o ),
	.datab(\bin[0]~input_o ),
	.datac(\bin[2]~input_o ),
	.datad(\bin[3]~input_o ),
	.cin(gnd),
	.combout(\Mux1~0_combout ),
	.cout());
// synopsys translate_off
defparam \Mux1~0 .lut_mask = 16'h408E;
defparam \Mux1~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X21_Y28_N4
cycloneiii_lcell_comb \Mux0~0 (
// Equation(s):
// \Mux0~0_combout  = (\bin[0]~input_o  & ((\bin[3]~input_o ) # (\bin[1]~input_o  $ (\bin[2]~input_o )))) # (!\bin[0]~input_o  & ((\bin[1]~input_o ) # (\bin[2]~input_o  $ (\bin[3]~input_o ))))

	.dataa(\bin[1]~input_o ),
	.datab(\bin[0]~input_o ),
	.datac(\bin[2]~input_o ),
	.datad(\bin[3]~input_o ),
	.cin(gnd),
	.combout(\Mux0~0_combout ),
	.cout());
// synopsys translate_off
defparam \Mux0~0 .lut_mask = 16'hEF7A;
defparam \Mux0~0 .sum_lutc_input = "datac";
// synopsys translate_on

assign seg[0] = \seg[0]~output_o ;

assign seg[1] = \seg[1]~output_o ;

assign seg[2] = \seg[2]~output_o ;

assign seg[3] = \seg[3]~output_o ;

assign seg[4] = \seg[4]~output_o ;

assign seg[5] = \seg[5]~output_o ;

assign seg[6] = \seg[6]~output_o ;

endmodule
